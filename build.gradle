plugins {
//    id 'application'
    id 'groovy'
    id 'java'
    id "maven-publish"
//    id "com.jfrog.bintray" version "1.8.4"
}

group 'gppBuilder'
version '1.0.6'
// version 1.0.0 was the base version with the Builder reconfigured
// so that many of the calls are just a call to a base version of the required connection
// version 1.0.1 includes the Visualisation of matrix style engines
// version 1.0.2 includes the more complete Pattern definitions
// version 1.0.3 built using Java 13
// version 1.0.4 built using Java 11 and Groovy-3.0.0
// version 1.0.5 incorporates EmitSingle J11 G3.0.1
// version 1.0.6 uses Groovy.3.0.4

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'

Properties properties = new Properties()
try {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
} catch (Exception e) {
    logger.warn("Missing local.properties - won't be able to upload to Bintray.  \nPlease add local.properties with properties bintray.user and bintray.apikey.")
}

def userName = properties.getProperty("gpr.user")
def token = properties.getProperty("gpr.key")

println "Tokens: $userName, $token"
repositories {
    mavenCentral()
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/jonkerridge/GPP_Library")
            credentials {
                username = userName
                password = token
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}


dependencies {
    compile 'org.codehaus.groovy:groovy-all:3.0.7'
//    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
}

task copyLib ( type: Copy){
    def libName = "${rootProject.name}-${version}.jar"
    println "copying $libName"
    from "${buildDir}/libs/${libName}"
    into "C:/jcspLib"
}
